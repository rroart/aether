apiVersion: apps/v1
kind: Deployment
metadata:
  name: hibernate$APPID
  labels:
    app: hibernate$APPID
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hibernate$APPID
  template:
    metadata:
      labels:
        app: hibernate$APPID
    spec:
      initContainers:
      - name: hibernateinit
        image: hibernatedata$APPID
        command: ["/bin/sh", "-c", "cp -R /data/* /newdata/"]
        volumeMounts:
        - name: hibernatedatavol
          mountPath: /newdata
      containers:
      - name: hibernate$APPID
        image: hibernate$IMGID
        ports:
        - containerPort: 80
        volumeMounts:
        - name: hibernatedatavol
          mountPath: /data
      volumes:
      - name: hibernatedatavol
        persistentVolumeClaim:
          claimName: hibernatedatapv
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    app.kubernetes.io/component: controller
  name: aether-hibernate$APPID
  annotations:
    ingressclass.kubernetes.io/is-default-class: "false"
spec:
  controller: k8s.io/ingress-nginx
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: name-virtual-host-ingress-aether-hibernate$APPID
spec:
  ingressClassName: aether-hibernate$APPID
  rules:
  - host: $HIBERNATE
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: aether-hibernate$APPID
            port:
              number: 8080
